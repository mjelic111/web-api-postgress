[{"/home/marin/Workspace/web-api-postgress/WebApi/client/src/index.js":"1","/home/marin/Workspace/web-api-postgress/WebApi/client/src/reportWebVitals.js":"2","/home/marin/Workspace/web-api-postgress/WebApi/client/src/App.js":"3","/home/marin/Workspace/web-api-postgress/WebApi/client/src/Clients.js":"4","/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/Pagination.js":"5","/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/Table.js":"6","/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/CreateClient.js":"7"},{"size":500,"mtime":1607536078670,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607535584953,"results":"10","hashOfConfig":"9"},{"size":279,"mtime":1607587758123,"results":"11","hashOfConfig":"9"},{"size":3387,"mtime":1607591097873,"results":"12","hashOfConfig":"9"},{"size":1212,"mtime":1607591556573,"results":"13","hashOfConfig":"9"},{"size":679,"mtime":1607544812276,"results":"14","hashOfConfig":"9"},{"size":2661,"mtime":1607587035817,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1rch7hf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/marin/Workspace/web-api-postgress/WebApi/client/src/index.js",[],["33","34"],"/home/marin/Workspace/web-api-postgress/WebApi/client/src/reportWebVitals.js",[],"/home/marin/Workspace/web-api-postgress/WebApi/client/src/App.js",[],"/home/marin/Workspace/web-api-postgress/WebApi/client/src/Clients.js",["35"],"import { Container, Row } from \"reactstrap\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport \"./Clients.css\";\nimport Pagination from \"./components/Pagination\";\nimport Table from \"./components/Table\";\nimport CreateClient from \"./components/CreateClient\";\nimport toast from \"react-simple-toasts\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\n\nfunction Clients() {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [next, setNext] = useState({});\n  const [previous, setPrevious] = useState({});\n  const [totalPages, setTotalPages] = useState({});\n  const [connection, setConnection] = useState(null);\n  const [update, setUpdate] = useState({});\n  const [url, setUrl] = useState(\n    process.env.REACT_APP_API_URL + \"api/contact/get/1\"\n  );\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(url);\n      const { data, next, previous, totalPages } = await response.json();\n      setData(data);\n      setNext(next);\n      setPrevious(previous);\n      setTotalPages(totalPages);\n      setLoading(false);\n    }\n    fetchData();\n  }, [url, update]);\n\n  useEffect(() => {\n    const newConnection = new HubConnectionBuilder()\n      .withUrl(process.env.REACT_APP_API_URL + \"contactHub\")\n      .withAutomaticReconnect()\n      .build();\n\n    setConnection(newConnection);\n  }, []);\n\n  useEffect(() => {\n    if (connection) {\n      connection\n        .start()\n        .then(() => {\n          console.log(\"Connected!\");\n\n          connection.on(\"ReceiveContact\", (id, contact) => {\n            console.log(\"ReceiveContact\", id, contact);\n            toast(`SignalR received contact: ${contact.name}`, 5000);\n            setUpdate({}); //trigger refetch\n          });\n        })\n        .catch((e) => console.log(\"Connection failed: \", e));\n    }\n  }, [connection]);\n\n  const createContact = useCallback(\n    async (data) => {\n      // console.log(\"Creating client...\", data);\n      const url = process.env.REACT_APP_API_URL + \"api/contact\";\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        });\n        await response.json();\n        toast(\"Client created\", 1500);\n        // send signalR message\n        if (connection.connectionStarted) {\n          try {\n            await connection.send(\"UpdateContact\", 1, data);\n          } catch (e) {\n            console.log(e);\n          }\n        } else {\n          alert(\"No connection to server yet.\");\n        }\n      } catch (error) {\n        console.log(error);\n        toast(\"Error happend while creating client\", 1500);\n      }\n    },\n    [connection, data]\n  );\n\n  if (loading) {\n    return (\n      <p>\n        <em>Loading...</em>\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <h1>Simple Client Data</h1>\n        </Row>\n        <Row>\n          <Table data={data} />\n          <Pagination\n            next={next}\n            previous={previous}\n            totalPages={totalPages}\n            setUrl={setUrl}\n          />\n        </Row>\n        <Row>\n          <h2>Create new client</h2>\n        </Row>\n        <Row>\n          <CreateClient createContact={createContact} />\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Clients;\n","/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/Pagination.js",[],"/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/Table.js",[],"/home/marin/Workspace/web-api-postgress/WebApi/client/src/components/CreateClient.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":88,"column":5,"nodeType":"44","endLine":88,"endColumn":23,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [connection]",{"range":"53","text":"54"},[2741,2759],"[connection]"]